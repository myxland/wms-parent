<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deer.wms.bill.manage.dao.MtAloneProductMapper">
  <resultMap id="BaseResultMap" type="com.deer.wms.bill.manage.model.MtAloneProduct">
    <!--
      WARNING - @mbg.generated
    -->
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="batch" jdbcType="VARCHAR" property="batch" />
      <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
      <result column="product_code" jdbcType="VARCHAR" property="productCode" />
      <result column="item_code" jdbcType="VARCHAR" property="itemCode" />
      <result column="product_name" jdbcType="VARCHAR" property="productName" />
      <result column="product_type_code" jdbcType="VARCHAR" property="productTypeCode" />
      <result column="color_code" jdbcType="VARCHAR" property="colorCode" />
      <result column="shell_fabric" jdbcType="VARCHAR" property="shellFabric" />
      <result column="tissue" jdbcType="VARCHAR" property="tissue" />
      <result column="origin" jdbcType="VARCHAR" property="origin" />
      <result column="ware_num" jdbcType="INTEGER" property="wareNum" />
      <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
      <result column="supplier_num" jdbcType="INTEGER" property="supplierNum" />
      <result column="price" jdbcType="REAL" property="price" />
      <result column="larghezza" jdbcType="REAL" property="larghezza" />
      <result column="larghezza_unit_code" jdbcType="VARCHAR" property="larghezzaUnitCode" />
      <result column="grammage" jdbcType="REAL" property="grammage" />
      <result column="grammage_unit_code" jdbcType="VARCHAR" property="grammageUnitCode" />
      <result column="product_length" jdbcType="REAL" property="productLength" />
      <result column="product_remain_length" jdbcType="REAL" property="productRemainLength" />
      <result column="density" jdbcType="VARCHAR" property="density" />
      <result column="specification" jdbcType="VARCHAR" property="specification" />
      <result column="processing_mode" jdbcType="VARCHAR" property="processingMode" />
      <result column="product_bar_code" jdbcType="VARCHAR" property="productBarCode" />
      <result column="specimen_bar_code" jdbcType="VARCHAR" property="specimenBarCode" />
      <result column="greffier_id" jdbcType="VARCHAR" property="greffierId" />
      <result column="is_detection" jdbcType="INTEGER" property="isDetection" />
      <result column="detection_man_id" jdbcType="VARCHAR" property="detectionManId" />
      <result column="product_state" jdbcType="INTEGER" property="productState" />
      <result column="description" jdbcType="VARCHAR" property="description" />
      <result column="note" jdbcType="VARCHAR" property="note" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
      <result column="reviewe_state" jdbcType="INTEGER" property="revieweState" />
      <result column="delivery_state" jdbcType="INTEGER" property="deliveryState" />
      <result column="return_state" jdbcType="INTEGER" property="returnState" />
      <result column="dyelot_num" jdbcType="VARCHAR" property="dyelotNum" />
      <result column="rgb_hex" jdbcType="VARCHAR" property="rgbHex" />
      <result column="color_name" jdbcType="VARCHAR" property="colorName" />
      <result column="product_detect_length" jdbcType="REAL" property="productDetectLength" />
      <result column="images" jdbcType="VARCHAR" property="images" />
      <result column="company_id" jdbcType="INTEGER" property="companyId" />
      <result column="cell_code" jdbcType="VARCHAR" property="cellCode" />
      <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
   
    <resultMap id="ProductCombinationMap" type="com.deer.wms.bill.manage.model.MtAloneProductVO" extends="BaseResultMap">
     <result column="roll_num" jdbcType="INTEGER" property="rollNum" />
     <result column="delivery_length" jdbcType="REAL" property="deliveryLength" />
     <result column="detect_length" jdbcType="REAL" property="detectLength" />
     <result column="remain_length" jdbcType="REAL" property="remainLength" />
     <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
        <result column="item_type_name" jdbcType="VARCHAR" property="itemTypeName" />
  </resultMap>
  
   <resultMap id="ProductDeliveryMap" type="com.deer.wms.bill.manage.model.MtAloneProductDeliveryVO" extends="BaseResultMap">
     <result column="delivery_length" jdbcType="REAL" property="deliveryLength" />
  </resultMap>
  
  <resultMap id="ProductCellMap" type="com.deer.wms.bill.manage.model.MtAloneProductCellVO" extends="BaseResultMap">
     <result column="cell_name" jdbcType="VARCHAR" property="cellName" />
  </resultMap>
  
     <select id="findList" parameterType="com.deer.wms.bill.manage.model.MtAloneProductCriteria" resultMap="BaseResultMap">
      select   *
      from mt_alone_product
     </select>
     
     <select id="findListNew" parameterType="com.deer.wms.bill.manage.model.MtAloneProductParams" resultMap="ProductCombinationMap">
		SELECT
		*,IFNULL(tmp0.num,0) AS roll_num,IFNULL(tmp1.deliverylength,0) AS delivery_length,IFNULL(tmp2.detectlength,0) AS detect_length,IFNULL(tmp2.detectlength,0)-IFNULL(tmp1.deliverylength,0) AS remain_length,tmp3.sup_name AS supplier_name,tmp4.type_name AS item_type_name
		FROM mt_alone_product pro
		LEFT JOIN (SELECT det.`warehouse_barcode` AS barcode0,COUNT(*) AS num FROM mt_alone_product_det det WHERE det.is_complete_out=0 GROUP BY det.`warehouse_barcode`)tmp0 
		ON tmp0.barcode0=pro.`product_bar_code`
		LEFT JOIN (SELECT delivery_det.`product_barcode` AS barcode1,SUM(delivery_det.`delivery_length`)AS deliverylength FROM mt_alone_delivery_det delivery_det GROUP BY delivery_det.`product_barcode`) tmp1
		ON tmp1.barcode1=pro.`product_bar_code`
		LEFT JOIN (SELECT detect_det.`product_barcode` AS barcode2,SUM(detect_det.`detect_length`)AS detectlength FROM mt_alone_detect_det detect_det GROUP BY detect_det.`product_barcode`)tmp2
		ON tmp2.barcode2=pro.`product_bar_code`
		LEFT JOIN (SELECT sup.supplier_code AS sup_code,sup.supplier_name AS sup_name FROM supplier_manage sup )tmp3
		ON tmp3.sup_code= pro.supplier_code
        LEFT JOIN (SELECT item.item_type_code AS type_code,item.item_type_name AS type_name FROM item_type item )tmp4
        ON tmp4.type_code= pro.product_type_code
	    WHERE pro.state='normal'
      <if test="keywords != null and keywords != ''">
        AND (
        pro.product_name LIKE CONCAT('%', #{keywords}, '%')
        OR pro.product_code LIKE CONCAT('%', #{keywords}, '%')
        OR pro.item_code LIKE CONCAT('%', #{keywords}, '%')
        OR pro.cell_code LIKE CONCAT('%', #{keywords}, '%')
        OR pro.color_name LIKE CONCAT('%', #{keywords}, '%')
        OR tmp3.sup_name LIKE CONCAT('%', #{keywords}, '%')
        )
      </if>
      <if test="productTypeCode != null and productTypeCode != ''">
        AND pro.product_type_code= #{productTypeCode}
      </if>
      <if test="companyId != null">
        AND pro.company_id = #{companyId}
      </if>   
      <if test="begDate!=null and begDate!=''">
      <![CDATA[   and DATE_FORMAT(pro.create_time, '%Y-%m-%d')>=  DATE_FORMAT(#{begDate}, '%Y-%m-%d')   ]]>
      </if>
      <if test="endDate!=null and endDate!=''">
      <![CDATA[  and DATE_FORMAT(pro.create_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')    ]]>
      </if>
        ORDER BY pro.create_time desc
     </select>
     
     <select id="findDeliveryProForms" parameterType="com.deer.wms.bill.manage.model.MtAloneDeliveryParams" resultMap="ProductDeliveryMap">
		SELECT pro.*,IFNULL(tmp.delLength,0) AS delivery_length
		FROM  
			(SELECT det.product_barcode AS proBarcode,SUM(det.delivery_length)AS delLength,det.delivery_order_code  AS delCode FROM mt_alone_delivery_det det WHERE 1=1
			      <if test="begDate!=null and begDate!=''">
	              <![CDATA[   and DATE_FORMAT(det.create_time, '%Y-%m-%d')>=  DATE_FORMAT(#{begDate}, '%Y-%m-%d')   ]]>
	              </if>
	              <if test="endDate!=null and endDate!=''">
	              <![CDATA[  and DATE_FORMAT(det.create_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')    ]]>
	              </if>
			GROUP BY det.`product_barcode`)tmp 
	    LEFT JOIN mt_alone_product pro ON tmp.proBarcode=pro.product_bar_code
	    LEFT JOIN supplier_manage sup  ON pro.supplier_code = sup.supplier_code
	    LEFT JOIN mt_alone_delivery_order delOrder ON tmp.delCode=delOrder.delivery_order_code
	    WHERE 1=1
      <if test="keywords != null and keywords != ''">
        AND (
        pro.product_name LIKE CONCAT('%', #{keywords}, '%')
        OR pro.product_code LIKE CONCAT('%', #{keywords}, '%')
        OR pro.item_code LIKE CONCAT('%', #{keywords}, '%')
        OR sup.supplier_name LIKE CONCAT('%', #{keywords}, '%') 
        OR delOrder.client_name LIKE CONCAT('%', #{keywords}, '%') 
        )
      </if>
      <if test="companyId != null">
        AND pro.company_id = #{companyId}
      </if>
      order by delOrder.create_time desc
     </select>
     
      <select id="findByBarcode" parameterType="java.lang.String" resultMap="BaseResultMap">
      select   *
      from mt_alone_product
      where 1=1
      <if test="productBarcode!=null and productBarcode!=''">
       and product_bar_code = #{productBarcode}
      </if>  
     </select>
     
      <select id="findByBarcodeNew" parameterType="java.lang.String" resultMap="ProductCellMap">
      select   pro.*,cell.memo as cell_name
      from mt_alone_product pro
      left join cell_info cell
      on pro.cell_code=cell.cell_code
      where 1=1
      <if test="productBarcode!=null and productBarcode!=''">
       and product_bar_code = #{productBarcode}
      </if>  
     </select>
  
      <select id="findListBykeyAndDate" parameterType="com.deer.wms.bill.manage.model.MtAloneProductCriteria" resultMap="BaseResultMap">
      select   *
      from mt_alone_product 
      where 1=1
      <if test="keyWord!=null and keyWord!=''">
      AND (
			product_name LIKE CONCAT('%', #{keyWord}, '%')
			OR product_code LIKE CONCAT('%', #{keyWord}, '%')
			OR item_code LIKE CONCAT('%', #{keyWord}, '%')
			OR color_name LIKE CONCAT('%', #{keyWord}, '%')
			)
      </if> 
       <if test="productTypeCode!=null and productTypeCode!=''">
      AND product_type_code LIKE CONCAT('%', #{productTypeCode}, '%')
      </if>         
      <if test="begDate!=null and begDate!=''">
      <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d')>=  DATE_FORMAT(#{begDate}, '%Y-%m-%d')   ]]>
      </if>
      <if test="endDate!=null and endDate!=''">
      <![CDATA[  and DATE_FORMAT(create_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')    ]]>
      </if>
      order by  create_time DESC
      
      </select>
      
      
      <select id="findListByWareState" parameterType="com.deer.wms.bill.manage.model.MtAloneProductCriteria" resultMap="BaseResultMap">
      select   *
      from mt_alone_product 
      where 1=1
      
      <if test="keyWord!=null and keyWord!=''">
       and product_name LIKE CONCAT('%', #{keyWord}, '%')
      </if>     
      <if test="begDate!=null and begDate!=''">
      <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d')>=  DATE_FORMAT(#{begDate}, '%Y-%m-%d')   ]]>
      </if>
      <if test="endDate!=null and endDate!=''">
      <![CDATA[  and DATE_FORMAT(create_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')    ]]>
      </if>
      <if test="currentState!=null">
      and product_state=#{currentState}
      </if>
      order by  create_time DESC
      
      </select>
      
      <select id="findListByRevieweState" parameterType="com.deer.wms.bill.manage.model.MtAloneProductCriteria" resultMap="BaseResultMap">
      select   *
      from mt_alone_product 
      where 1=1
      <if test="currentState!=null">
       and reviewe_state=#{currentState}
      </if>
      <if test="keyWord!=null and keyWord!=''">
       and product_name LIKE CONCAT('%', #{keyWord}, '%')
      </if>     
      <if test="begDate!=null and begDate!=''">
      <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d')>=  DATE_FORMAT(#{begDate}, '%Y-%m-%d')   ]]>
      </if>
      <if test="endDate!=null and endDate!=''">
      <![CDATA[  and DATE_FORMAT(create_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')    ]]>
      </if>

      order by  create_time DESC
      
      </select>

    <select id="findListBySupplierCode" parameterType="com.deer.wms.base.system.model.SupplierManageCriteria" resultMap="BaseResultMap">
        select   *
        from mt_alone_product
        where 1=1
        <if test="supplierCod!=null and supplierCod!=''">
            and supplier_code = #{supplierCode}
        </if>
        order by  create_time DESC
    </select>
    
    <delete id="deleteDetByProductCode" parameterType="com.deer.wms.bill.manage.model.MtAloneProductCriteria" >
        delete  
        from mt_alone_product_det
        where 1=1
        <if test="productBarCode!=null and productBarCode!=''">
            and warehouse_barcode = #{productBarCode}
        </if>
    </delete>

    <select id="findCountCellStateByComId" parameterType="com.deer.wms.bill.manage.model.MtAloneHomePageParams" resultType="com.deer.wms.bill.manage.model.MtAloneCellStateDto">
        select
        <!--查询有货货位数-->
        (select count(distinct(productDet.cell_code))  from mt_alone_product_det productDet
        inner join cell_info cell
        on productDet.company_id = cell.company_id and productDet.cell_code = cell.cell_code
        <where>
            productDet.cell_code is not null and productDet.state='normal'
            <if test="companyId != null">
                AND productDet.company_id=#{companyId}
            </if>
        </where>) countInStock,

        <!--查询货位总数-->
        (select count(distinct(cell.cell_code)) from cell_info cell
        <where>
            <if test="companyId != null">
                AND cell.company_id=#{companyId}
            </if>
        </where>)sumCells,

        <!--查询锁定货位数-->
        (select count(CASE state WHEN 2 THEN 1 ELSE null END)
        from cell_info cell
        <where>
            <if test="companyId != null">
                AND cell.company_id=#{companyId}
            </if>
        </where>) countLock,

        <!--查询故障货位数-->
        (select count(CASE state WHEN 3 THEN 1 ELSE null END)
        from cell_info cell
        <where>
            <if test="companyId != null">
                AND cell.company_id=#{companyId}
            </if>
        </where>) countFault  from dual

    </select>
</mapper>